!function () {
    function a(b, c, d) { if (!(this instanceof a)) throw new Error('JSONEditor constructor called without "new".'); var e = util.getInternetExplorerVersion(); if (-1 != e && 9 > e) throw new Error("不支持低于IE9的浏览器"); arguments.length && this._create(b, c, d) } function b(a, c, d) { if (!(this instanceof b)) throw new Error('TreeEditor constructor called without "new".'); this._create(a, c, d) } function c(a, b, d) { if (!(this instanceof c)) throw new Error('TextEditor constructor called without "new".'); this._create(a, b, d) } function d(a, b) { this.editor = a, this.dom = {}, this.expanded = !1, b && b instanceof Object ? (this.setField(b.field, b.fieldEditable), this.setValue(b.value, b.type)) : (this.setField(""), this.setValue(null)) } function e(a) { this.editor = a, this.dom = {} } function f(a, b) { function c(a, b, e) { e.forEach(function (e) { var f, g, h, i, j, k, l, m, n, o; "separator" == e.type ? (f = document.createElement("div"), f.className = "separator", h = document.createElement("li"), h.appendChild(f), a.appendChild(h)) : (g = {}, h = document.createElement("li"), a.appendChild(h), i = document.createElement("button"), i.className = e.className, g.button = i, e.title && (i.title = e.title), e.click && (i.onclick = function () { d.hide(), e.click() }), h.appendChild(i), e.submenu ? (j = document.createElement("div"), j.className = "icon", i.appendChild(j), i.appendChild(document.createTextNode(e.text)), e.click ? (i.className += " default", l = document.createElement("button"), g.buttonExpand = l, l.className = "expand", l.innerHTML = '<div class="expand"></div>', h.appendChild(l), e.submenuTitle && (l.title = e.submenuTitle), k = l) : (m = document.createElement("div"), m.className = "expand", i.appendChild(m), k = i), k.onclick = function () { d._onExpandItem(g), k.focus() }, n = [], g.subItems = n, o = document.createElement("ul"), g.ul = o, o.className = "menu", o.style.height = "0", h.appendChild(o), c(o, n, e.submenu)) : i.innerHTML = '<div class="icon"></div>' + e.text, b.push(g)) }) } var d, e, f, g, h, i; this.dom = {}, d = this, e = this.dom, this.anchor = void 0, this.items = a, this.eventListeners = {}, this.selection = void 0, this.visibleSubmenu = void 0, this.onClose = b ? b.close : void 0, f = document.createElement("div"), f.className = "jsoneditor-contextmenu", e.menu = f, g = document.createElement("ul"), g.className = "menu", f.appendChild(g), e.list = g, e.items = [], h = document.createElement("button"), e.focusButton = h, i = document.createElement("li"), i.style.overflow = "hidden", i.style.height = "0", i.appendChild(h), g.appendChild(i), c(g, this.dom.items, a), this.maxHeight = 0, a.forEach(function (b) { var c = 24 * (a.length + (b.submenu ? b.submenu.length : 0)); d.maxHeight = Math.max(d.maxHeight, c) }) } function g(a) { this.editor = a, this.clear(), this.actions = { editField: { undo: function (a) { a.node.updateField(a.oldValue) }, redo: function (a) { a.node.updateField(a.newValue) } }, editValue: { undo: function (a) { a.node.updateValue(a.oldValue) }, redo: function (a) { a.node.updateValue(a.newValue) } }, appendNode: { undo: function (a) { a.parent.removeChild(a.node) }, redo: function (a) { a.parent.appendChild(a.node) } }, insertBeforeNode: { undo: function (a) { a.parent.removeChild(a.node) }, redo: function (a) { a.parent.insertBefore(a.node, a.beforeNode) } }, insertAfterNode: { undo: function (a) { a.parent.removeChild(a.node) }, redo: function (a) { a.parent.insertAfter(a.node, a.afterNode) } }, removeNode: { undo: function (a) { var b = a.parent, c = b.childs[a.index] || b.append; b.insertBefore(a.node, c) }, redo: function (a) { a.parent.removeChild(a.node) } }, duplicateNode: { undo: function (a) { a.parent.removeChild(a.clone) }, redo: function (a) { a.parent.insertAfter(a.clone, a.node) } }, changeType: { undo: function (a) { a.node.changeType(a.oldType) }, redo: function (a) { a.node.changeType(a.newType) } }, moveNode: { undo: function (a) { a.startParent.moveTo(a.node, a.startIndex) }, redo: function (a) { a.endParent.moveTo(a.node, a.endIndex) } }, sort: { undo: function (a) { var b = a.node; b.hideChilds(), b.sort = a.oldSort, b.childs = a.oldChilds, b.showChilds() }, redo: function (a) { var b = a.node; b.hideChilds(), b.sort = a.newSort, b.childs = a.newChilds, b.showChilds() } } } } function h(a, b, c) { function d(b) { a.setMode(b); var c = a.dom && a.dom.modeBox; c && c.focus() } var e, g, h, i, j, k, l, m; for (e = { code: { text: "Code", title: "Switch to code highlighter", click: function () { d("code") } }, form: { text: "Form", title: "Switch to form editor", click: function () { d("form") } }, text: { text: "Text", title: "Switch to plain text editor", click: function () { d("text") } }, tree: { text: "Tree", title: "Switch to tree editor", click: function () { d("tree") } }, view: { text: "View", title: "Switch to tree view", click: function () { d("view") } } }, g = [], h = 0; h < b.length; h++) { if (i = b[h], j = e[i], !j) throw new Error('Unknown mode "' + i + '"'); j.className = "type-modes" + (c == i ? " selected" : ""), g.push(j) } if (k = e[c], !k) throw new Error('Unknown mode "' + c + '"'); return l = k.text, m = document.createElement("button"), m.className = "modes separator", m.innerHTML = l + " &#x25BE;", m.title = "Switch editor mode", m.onclick = function () { var a = new f(g); a.show(m) }, m } function i(a, b) { var d, e, f, g, h, i, j, k, l, m, n, o, c = this; this.editor = a, this.timeout = void 0, this.delay = 200, this.lastText = void 0, this.dom = {}, this.dom.container = b, d = document.createElement("table"), this.dom.table = d, d.className = "search", b.appendChild(d), e = document.createElement("tbody"), this.dom.tbody = e, d.appendChild(e), f = document.createElement("tr"), e.appendChild(f), g = document.createElement("td"), f.appendChild(g), h = document.createElement("div"), this.dom.results = h, h.className = "results", g.appendChild(h), g = document.createElement("td"), f.appendChild(g), i = document.createElement("div"), this.dom.input = i, i.className = "frame", i.title = "搜索", g.appendChild(i), j = document.createElement("table"), i.appendChild(j), k = document.createElement("tbody"), j.appendChild(k), f = document.createElement("tr"), k.appendChild(f), l = document.createElement("button"), l.className = "refresh", g = document.createElement("td"), g.appendChild(l), f.appendChild(g), m = document.createElement("input"), this.dom.search = m, m.oninput = function (a) { c._onDelayedSearch(a) }, m.onchange = function (a) { c._onSearch(a) }, m.onkeydown = function (a) { c._onKeyDown(a) }, m.onkeyup = function (a) { c._onKeyUp(a) }, l.onclick = function () { m.select() }, g = document.createElement("td"), g.appendChild(m), f.appendChild(g), n = document.createElement("button"), n.title = "下一个结果 (Enter)", n.className = "next", n.onclick = function () { c.next() }, g = document.createElement("td"), g.appendChild(n), f.appendChild(g), o = document.createElement("button"), o.title = "上一个结果 (Shift+Enter)", o.className = "previous", o.onclick = function () { c.previous() }, g = document.createElement("td"), g.appendChild(o), f.appendChild(g) } function j() { this.locked = !1 } var k, l, m, n; a.modes = {}, a.prototype._create = function (a, b, c) { this.container = a, this.options = b || {}, this.json = c || {}; var d = this.options.mode || "tree"; this.setMode(d) }, a.prototype._delete = function () { }, a.prototype.set = function (a) { this.json = a }, a.prototype.get = function () { return this.json }, a.prototype.setText = function (a) { this.json = util.parse(a) }, a.prototype.getText = function () { return JSON.stringify(this.json) }, a.prototype.setName = function (a) { this.options || (this.options = {}), this.options.name = a }, a.prototype.getName = function () { return this.options && this.options.name }, a.prototype.setMode = function (b) { var c, d, g, e = this.container, f = util.extend({}, this.options); if (f.mode = b, g = a.modes[b], !g) throw new Error('Unknown mode "' + f.mode + '"'); try { if ("text" == g.data ? (d = this.getName(), c = this.getText(), this._delete(), util.clear(this), util.extend(this, g.editor.prototype), this._create(e, f), this.setName(d), this.setText(c)) : (d = this.getName(), c = this.get(), this._delete(), util.clear(this), util.extend(this, g.editor.prototype), this._create(e, f), this.setName(d), this.set(c)), "function" == typeof g.load) try { g.load.call(this) } catch (h) { } } catch (h) { this._onError(h) } }, a.prototype._onError = function (a) { if ("function" == typeof this.onError && (util.log("WARNING: JSONEditor.onError is deprecated. Use options.error instead."), this.onError(a)), !this.options || "function" != typeof this.options.error) throw a; this.options.error(a) }, b.prototype._create = function (a, b, c) { if (!a) throw new Error("No container element provided."); this.container = a, this.dom = {}, this.highlighter = new j, this.selection = void 0, this._setOptions(b), this.options.history && !this.mode.view && (this.history = new g(this)), this._createFrame(), this._createTable(), this.set(c || {}) }, b.prototype._delete = function () { this.frame && this.container && this.frame.parentNode == this.container && this.container.removeChild(this.frame) }, b.prototype._setOptions = function (a) { if (this.options = { search: !0, history: !0, mode: "tree", name: void 0 }, a) { for (var b in a) a.hasOwnProperty(b) && (this.options[b] = a[b]); a.enableSearch && (this.options.search = a.enableSearch, util.log('WARNING: Option "enableSearch" is deprecated. Use "search" instead.')), a.enableHistory && (this.options.history = a.enableHistory, util.log('WARNING: Option "enableHistory" is deprecated. Use "history" instead.')), "editor" == a.mode && (this.options.mode = "tree", util.log('WARNING: Mode "editor" is deprecated. Use "tree" instead.')), "viewer" == a.mode && (this.options.mode = "view", util.log('WARNING: Mode "viewer" is deprecated. Use "view" instead.')) } this.mode = { edit: "view" != this.options.mode && "form" != this.options.mode, view: "view" == this.options.mode, form: "form" == this.options.mode } }, b.focusNode = void 0, b.prototype.set = function (a, b) { var c, e, f; b && (util.log('Warning: second parameter "name" is deprecated. Use setName(name) instead.'), this.options.name = b), a instanceof Function || void 0 === a ? this.clear() : (this.content.removeChild(this.table), c = { field: this.options.name, value: a }, e = new d(this, c), this._setRoot(e), f = !1, this.node.expand(f), this.content.appendChild(this.table)), this.history && this.history.clear() }, b.prototype.get = function () { return b.focusNode && b.focusNode.blur(), this.node ? this.node.getValue() : void 0 }, b.prototype.getText = function () { return JSON.stringify(this.get()) }, b.prototype.setText = function (a) { this.set(util.parse(a)) }, b.prototype.setName = function (a) { this.options.name = a, this.node && this.node.updateField(this.options.name) }, b.prototype.getName = function () { return this.options.name }, b.prototype.clear = function () { this.node && (this.node.collapse(), this.tbody.removeChild(this.node.getDom()), delete this.node) }, b.prototype._setRoot = function (a) { this.clear(), this.node = a, this.tbody.appendChild(a.getDom()) }, b.prototype.search = function (a) { var b; return this.node ? (this.content.removeChild(this.table), b = this.node.search(a), this.content.appendChild(this.table)) : b = [], b }, b.prototype.expandAll = function () { this.node && (this.content.removeChild(this.table), this.node.expand(), this.content.appendChild(this.table)) }, b.prototype.collapseAll = function () { this.node && (this.content.removeChild(this.table), this.node.collapse(), this.content.appendChild(this.table)) }, b.prototype._onAction = function (a, b) { if (this.history && this.history.add(a, b), this.options.change) try { this.options.change() } catch (c) { util.log("Error in change callback: ", c) } }, b.prototype.startAutoScroll = function (a) { var b = this, c = this.content, d = util.getAbsoluteTop(c), e = c.clientHeight, f = d + e, g = 24, h = 50; this.autoScrollStep = d + g > a && c.scrollTop > 0 ? (d + g - a) / 3 : a > f - g && e + c.scrollTop < c.scrollHeight ? (f - g - a) / 3 : void 0, this.autoScrollStep ? this.autoScrollTimer || (this.autoScrollTimer = setInterval(function () { b.autoScrollStep ? c.scrollTop -= b.autoScrollStep : b.stopAutoScroll() }, h)) : this.stopAutoScroll() }, b.prototype.stopAutoScroll = function () { this.autoScrollTimer && (clearTimeout(this.autoScrollTimer), delete this.autoScrollTimer), this.autoScrollStep && delete this.autoScrollStep }, b.prototype.setSelection = function (a) { a && ("scrollTop" in a && this.content && (this.content.scrollTop = a.scrollTop), a.range && util.setSelectionOffset(a.range), a.dom && a.dom.focus()) }, b.prototype.getSelection = function () { return { dom: b.domFocus, scrollTop: this.content ? this.content.scrollTop : 0, range: util.getSelectionOffset() } }, b.prototype.scrollTo = function (a, b) { var d, e, f, g, h, c = this.content; c ? (d = this, d.animateTimeout && (clearTimeout(d.animateTimeout), delete d.animateTimeout), d.animateCallback && (d.animateCallback(!1), delete d.animateCallback), e = c.clientHeight, f = c.scrollHeight - e, g = Math.min(Math.max(a - e / 4, 0), f), h = function () { var a = c.scrollTop, e = g - a; Math.abs(e) > 3 ? (c.scrollTop += e / 3, d.animateCallback = b, d.animateTimeout = setTimeout(h, 50)) : (b && b(!0), c.scrollTop = g, delete d.animateTimeout, delete d.animateCallback) }, h()) : b && b(!1) }, b.prototype._createFrame = function () { var a, b, c, d, e, f, g; this.frame = document.createElement("div"), this.frame.className = "jsoneditor", this.container.appendChild(this.frame), a = this, b = function (b) { a._onEvent(b) }, this.frame.onclick = function (a) { var c = a.target; b(a), "BUTTON" == c.nodeName && a.preventDefault() }, this.frame.oninput = b, this.frame.onchange = b, this.frame.onkeydown = b, this.frame.onkeyup = b, this.frame.oncut = b, this.frame.onpaste = b, this.frame.onmousedown = b, this.frame.onmouseup = b, this.frame.onmouseover = b, this.frame.onmouseout = b, util.addEventListener(this.frame, "focus", b, !0), util.addEventListener(this.frame, "blur", b, !0), this.frame.onfocusin = b, this.frame.onfocusout = b, this.menu = document.createElement("div"), this.menu.className = "menu", this.frame.appendChild(this.menu), c = document.createElement("button"), c.className = "expand-all", c.title = "展开节点", c.onclick = function () { a.expandAll() }, this.menu.appendChild(c), d = document.createElement("button"), d.title = "折叠节点", d.className = "collapse-all", d.onclick = function () { a.collapseAll() }, this.menu.appendChild(d), this.history && (e = document.createElement("button"), e.className = "undo separator", e.title = "后退 Ctrl+Z", e.onclick = function () { a._onUndo() }, this.menu.appendChild(e), this.dom.undo = e, f = document.createElement("button"), f.className = "redo", f.title = "前进 (Ctrl+Shift+Z)", f.onclick = function () { a._onRedo() }, this.menu.appendChild(f), this.dom.redo = f, this.history.onChange = function () { e.disabled = !a.history.canUndo(), f.disabled = !a.history.canRedo() }, this.history.onChange()), this.options && this.options.modes && this.options.modes.length && (g = h(this, this.options.modes, this.options.mode), this.menu.appendChild(g), this.dom.modeBox = g), this.options.search && (this.searchBox = new i(this, this.menu)) }, b.prototype._onUndo = function () { this.history && (this.history.undo(), this.options.change && this.options.change()) }, b.prototype._onRedo = function () { this.history && (this.history.redo(), this.options.change && this.options.change()) }, b.prototype._onEvent = function (a) { var e, c = a.target; "keydown" == a.type && this._onKeyDown(a), "focus" == a.type && (b.domFocus = c), e = d.getNodeFromTarget(c), e && e.onEvent(a) }, b.prototype._onKeyDown = function (a) { var g, c = a.which || a.keyCode, d = a.ctrlKey, e = a.shiftKey, f = !1; 9 == c && setTimeout(function () { util.selectContentEditable(b.domFocus) }, 0), this.searchBox && (d && 70 == c ? (this.searchBox.dom.search.focus(), this.searchBox.dom.search.select(), f = !0) : (114 == c || d && 71 == c) && (g = !0, e ? this.searchBox.previous(g) : this.searchBox.next(g), f = !0)), this.history && (d && !e && 90 == c ? (this._onUndo(), f = !0) : d && e && 90 == c && (this._onRedo(), f = !0)), f && (a.preventDefault(), a.stopPropagation()) }, b.prototype._createTable = function () { var b, a = document.createElement("div"); a.className = "outer", this.contentOuter = a, this.content = document.createElement("div"), this.content.className = "tree", a.appendChild(this.content), this.table = document.createElement("table"), this.table.className = "tree", this.content.appendChild(this.table), this.colgroupContent = document.createElement("colgroup"), this.mode.edit && (b = document.createElement("col"), b.width = "24px", this.colgroupContent.appendChild(b)), b = document.createElement("col"), b.width = "24px", this.colgroupContent.appendChild(b), b = document.createElement("col"), this.colgroupContent.appendChild(b), this.table.appendChild(this.colgroupContent), this.tbody = document.createElement("tbody"), this.table.appendChild(this.tbody), this.frame.appendChild(a) }, a.modes.tree = { editor: b, data: "json" }, a.modes.view = { editor: b, data: "json" }, a.modes.form = { editor: b, data: "json" }, a.modes.editor = { editor: b, data: "json" }, a.modes.viewer = { editor: b, data: "json" }, c.prototype._create = function (a, b, c) { var d, e, f, g, i, j; b = b || {}, this.options = b, this.indentation = b.indentation ? Number(b.indentation) : 2, this.mode = "code" == b.mode ? "code" : "text", "code" == this.mode && "undefined" == typeof ace && (this.mode = "text", util.log("WARNING: Cannot load code editor, Ace library not loaded. Falling back to plain text editor")), d = this, this.container = a, this.dom = {}, this.editor = void 0, this.textarea = void 0, this.width = a.clientWidth, this.height = a.clientHeight, this.frame = document.createElement("div"), this.frame.className = "jsoneditor", this.frame.onclick = function (a) { a.preventDefault() }, this.menu = document.createElement("div"), this.menu.className = "menu", this.frame.appendChild(this.menu), e = document.createElement("button"), e.className = "format", e.title = "换行缩进显示", this.menu.appendChild(e), e.onclick = function () { try { d.format() } catch (a) { d._onError(a) } }, f = document.createElement("button"), f.className = "compact", f.title = "不换行显示", this.menu.appendChild(f), f.onclick = function () { try { d.compact() } catch (a) { d._onError(a) } }, this.options && this.options.modes && this.options.modes.length && (g = h(this, this.options.modes, this.options.mode), this.menu.appendChild(g), this.dom.modeBox = g), this.content = document.createElement("div"), this.content.className = "outer", this.frame.appendChild(this.content), this.container.appendChild(this.frame), "code" == this.mode ? (this.editorDom = document.createElement("div"), this.editorDom.style.height = "100%", this.editorDom.style.width = "100%", this.content.appendChild(this.editorDom), i = ace.edit(this.editorDom), i.setTheme("ace/theme/jsoneditor"), i.setShowPrintMargin(!1), i.setFontSize(13), i.getSession().setMode("ace/mode/json"), i.getSession().setUseSoftTabs(!0), i.getSession().setUseWrapMode(!0), this.editor = i, b.change && i.on("change", function () { b.change() })) : (j = document.createElement("textarea"), j.className = "text", j.spellcheck = !1, this.content.appendChild(j), this.textarea = j, b.change && (null === this.textarea.oninput ? this.textarea.oninput = function () { b.change() } : this.textarea.onchange = function () { b.change() })), "string" == typeof c ? this.setText(c) : this.set(c) }, c.prototype._delete = function () { this.frame && this.container && this.frame.parentNode == this.container && this.container.removeChild(this.frame) }, c.prototype._onError = function (a) { if ("function" == typeof this.onError && (util.log("WARNING: JSONEditor.onError is deprecated. Use options.error instead."), this.onError(a)), !this.options || "function" != typeof this.options.error) throw a; this.options.error(a) }, c.prototype.compact = function () { var a = util.parse(this.getText()); this.setText(JSON.stringify(a)) }, c.prototype.format = function () { var a = util.parse(this.getText()); this.setText(JSON.stringify(a, null, this.indentation)) }, c.prototype.focus = function () { this.textarea && this.textarea.focus(), this.editor && this.editor.focus() }, c.prototype.resize = function () { if (this.editor) { var a = !1; this.editor.resize(a) } }, c.prototype.set = function (a) { this.setText(JSON.stringify(a, null, this.indentation)) }, c.prototype.get = function () { return util.parse(this.getText()) }, c.prototype.getText = function () { return this.textarea ? this.textarea.value : this.editor ? this.editor.getValue() : "" }, c.prototype.setText = function (a) { this.textarea && (this.textarea.value = a), this.editor && this.editor.setValue(a, -1) }, a.modes.text = { editor: c, data: "text", load: c.prototype.format }, a.modes.code = { editor: c, data: "text", load: c.prototype.format }, d.prototype.setParent = function (a) { this.parent = a }, d.prototype.setField = function (a, b) { this.field = a, this.fieldEditable = 1 == b }, d.prototype.getField = function () { return void 0 === this.field && this._getDomField(), this.field }, d.prototype.setValue = function (a, b) { var c, e, g, h, i, f = this.childs; if (f) for (; f.length;) this.removeChild(f[0]); if (this.type = this._getType(a), b && b != this.type) { if ("string" != b || "auto" != this.type) throw new Error('Type mismatch: cannot cast value of type "' + this.type + ' to the specified type "' + b + '"'); this.type = b } if ("array" == this.type) { for (this.childs = [], g = 0, h = a.length; h > g; g++) c = a[g], void 0 === c || c instanceof Function || (e = new d(this.editor, { value: c }), this.appendChild(e)); this.value = "" } else if ("object" == this.type) { this.childs = []; for (i in a) a.hasOwnProperty(i) && (c = a[i], void 0 === c || c instanceof Function || (e = new d(this.editor, { field: i, value: c }), this.appendChild(e))); this.value = "" } else this.childs = void 0, this.value = a }, d.prototype.getValue = function () { var a, b; return "array" == this.type ? (a = [], this.childs.forEach(function (b) { a.push(b.getValue()) }), a) : "object" == this.type ? (b = {}, this.childs.forEach(function (a) { b[a.getField()] = a.getValue() }), b) : (void 0 === this.value && this._getDomValue(), this.value) }, d.prototype.getLevel = function () { return this.parent ? this.parent.getLevel() + 1 : 0 }, d.prototype.clone = function () { var b, a = new d(this.editor); return a.type = this.type, a.field = this.field, a.fieldInnerText = this.fieldInnerText, a.fieldEditable = this.fieldEditable, a.value = this.value, a.valueInnerText = this.valueInnerText, a.expanded = this.expanded, this.childs ? (b = [], this.childs.forEach(function (c) { var d = c.clone(); d.setParent(a), b.push(d) }), a.childs = b) : a.childs = void 0, a }, d.prototype.expand = function (a) { this.childs && (this.expanded = !0, this.dom.expand && (this.dom.expand.className = "expanded"), this.showChilds(), 0 != a && this.childs.forEach(function (b) { b.expand(a) })) }, d.prototype.collapse = function (a) { this.childs && (this.hideChilds(), 0 != a && this.childs.forEach(function (b) { b.collapse(a) }), this.dom.expand && (this.dom.expand.className = "collapsed"), this.expanded = !1) }, d.prototype.showChilds = function () { var b, c, d, e, a = this.childs; a && this.expanded && (b = this.dom.tr, c = b ? b.parentNode : void 0, c && (d = this.getAppend(), e = b.nextSibling, e ? c.insertBefore(d, e) : c.appendChild(d), this.childs.forEach(function (a) { c.insertBefore(a.getDom(), d), a.showChilds() }))) }, d.prototype.hide = function () { var a = this.dom.tr, b = a ? a.parentNode : void 0; b && b.removeChild(a), this.hideChilds() }, d.prototype.hideChilds = function () { var b, a = this.childs; a && this.expanded && (b = this.getAppend(), b.parentNode && b.parentNode.removeChild(b), this.childs.forEach(function (a) { a.hide() })) }, d.prototype.appendChild = function (a) { if (this._hasChilds()) { if (a.setParent(this), a.fieldEditable = "object" == this.type, "array" == this.type && (a.index = this.childs.length), this.childs.push(a), this.expanded) { var b = a.getDom(), c = this.getAppend(), d = c ? c.parentNode : void 0; c && d && d.insertBefore(b, c), a.showChilds() } this.updateDom({ updateIndexes: !0 }), a.updateDom({ recurse: !0 }) } }, d.prototype.moveBefore = function (a, b) { var c, d; this._hasChilds() && (c = this.dom.tr ? this.dom.tr.parentNode : void 0, c && (d = document.createElement("tr"), d.style.height = c.clientHeight + "px", c.appendChild(d)), a.parent && a.parent.removeChild(a), b instanceof e ? this.appendChild(a) : this.insertBefore(a, b), c && c.removeChild(d)) }, d.prototype.moveTo = function (a, b) { var c, d; a.parent == this && (c = this.childs.indexOf(a), b > c && b++), d = this.childs[b] || this.append, this.moveBefore(a, d) }, d.prototype.insertBefore = function (a, b) { var c, d, e, f; if (this._hasChilds()) { if (b == this.append) a.setParent(this), a.fieldEditable = "object" == this.type, this.childs.push(a); else { if (c = this.childs.indexOf(b), -1 == c) throw new Error("Node not found"); a.setParent(this), a.fieldEditable = "object" == this.type, this.childs.splice(c, 0, a) } this.expanded && (d = a.getDom(), e = b.getDom(), f = e ? e.parentNode : void 0, e && f && f.insertBefore(d, e), a.showChilds()), this.updateDom({ updateIndexes: !0 }), a.updateDom({ recurse: !0 }) } }, d.prototype.insertAfter = function (a, b) { if (this._hasChilds()) { var c = this.childs.indexOf(b), d = this.childs[c + 1]; d ? this.insertBefore(a, d) : this.appendChild(a) } }, d.prototype.search = function (a) { var b, e, f, g, h, c = [], d = a ? a.toLowerCase() : void 0; return delete this.searchField, delete this.searchValue, void 0 != this.field && (e = String(this.field).toLowerCase(), b = e.indexOf(d), -1 != b && (this.searchField = !0, c.push({ node: this, elem: "field" })), this._updateDomField()), this._hasChilds() ? (this.childs && (f = [], this.childs.forEach(function (b) { f = f.concat(b.search(a)) }), c = c.concat(f)), void 0 != d && (g = !1, 0 == f.length ? this.collapse(g) : this.expand(g))) : (void 0 != this.value && (h = String(this.value).toLowerCase(), b = h.indexOf(d), -1 != b && (this.searchValue = !0, c.push({ node: this, elem: "value" }))), this._updateDomValue()), c }, d.prototype.scrollTo = function (a) { if (!this.dom.tr || !this.dom.tr.parentNode) for (var b = this.parent, c = !1; b;) b.expand(c), b = b.parent; this.dom.tr && this.dom.tr.parentNode && this.editor.scrollTo(this.dom.tr.offsetTop, a) }, d.focusElement = void 0, d.prototype.focus = function (a) { if (d.focusElement = a, this.dom.tr && this.dom.tr.parentNode) { var b = this.dom; switch (a) { case "drag": b.drag ? b.drag.focus() : b.menu.focus(); break; case "menu": b.menu.focus(); break; case "expand": this._hasChilds() ? b.expand.focus() : b.field && this.fieldEditable ? (b.field.focus(), util.selectContentEditable(b.field)) : b.value && !this._hasChilds() ? (b.value.focus(), util.selectContentEditable(b.value)) : b.menu.focus(); break; case "field": b.field && this.fieldEditable ? (b.field.focus(), util.selectContentEditable(b.field)) : b.value && !this._hasChilds() ? (b.value.focus(), util.selectContentEditable(b.value)) : this._hasChilds() ? b.expand.focus() : b.menu.focus(); break; case "value": default: b.value && !this._hasChilds() ? (b.value.focus(), util.selectContentEditable(b.value)) : b.field && this.fieldEditable ? (b.field.focus(), util.selectContentEditable(b.field)) : this._hasChilds() ? b.expand.focus() : b.menu.focus() } } }, d.select = function (a) { setTimeout(function () { util.selectContentEditable(a) }, 0) }, d.prototype.blur = function () { this._getDomValue(!1), this._getDomField(!1) }, d.prototype._duplicate = function (a) { var b = a.clone(); return this.insertAfter(b, a), b }, d.prototype.containsNode = function (a) { var b, c, d; if (this == a) return !0; if (b = this.childs) for (c = 0, d = b.length; d > c; c++) if (b[c].containsNode(a)) return !0; return !1 }, d.prototype._move = function (a, b) { if (a != b) { if (a.containsNode(this)) throw new Error("Cannot move a field into a child of itself"); a.parent && a.parent.removeChild(a); var c = a.clone(); a.clearDom(), b ? this.insertBefore(c, b) : this.appendChild(c) } }, d.prototype.removeChild = function (a) { var b, c; return this.childs && (b = this.childs.indexOf(a), -1 != b) ? (a.hide(), delete a.searchField, delete a.searchValue, c = this.childs.splice(b, 1)[0], this.updateDom({ updateIndexes: !0 }), c) : void 0 }, d.prototype._remove = function (a) { this.removeChild(a) }, d.prototype.changeType = function (a) { var c, d, e, b = this.type; b != a && ("string" != a && "auto" != a || "string" != b && "auto" != b ? (d = this.dom.tr ? this.dom.tr.parentNode : void 0, c = this.expanded ? this.getAppend() : this.getDom(), e = c && c.parentNode ? c.nextSibling : void 0, this.hide(), this.clearDom(), this.type = a, "object" == a ? (this.childs || (this.childs = []), this.childs.forEach(function (a) { a.clearDom(), delete a.index, a.fieldEditable = !0, void 0 == a.field && (a.field = "") }), ("string" == b || "auto" == b) && (this.expanded = !0)) : "array" == a ? (this.childs || (this.childs = []), this.childs.forEach(function (a, b) { a.clearDom(), a.fieldEditable = !1, a.index = b }), ("string" == b || "auto" == b) && (this.expanded = !0)) : this.expanded = !1, d && (e ? d.insertBefore(this.getDom(), e) : d.appendChild(this.getDom())), this.showChilds()) : this.type = a, ("auto" == a || "string" == a) && (this.value = "string" == a ? String(this.value) : this._stringCast(String(this.value)), this.focus()), this.updateDom({ updateIndexes: !0 })) }, d.prototype._getDomValue = function (a) { var b, c, d; if (this.dom.value && "array" != this.type && "object" != this.type && (this.valueInnerText = util.getInnerText(this.dom.value)), void 0 != this.valueInnerText) try { "string" == this.type ? b = this._unescapeHTML(this.valueInnerText) : (c = this._unescapeHTML(this.valueInnerText), b = this._stringCast(c)), b !== this.value && (d = this.value, this.value = b, this.editor._onAction("editValue", { node: this, oldValue: d, newValue: b, oldSelection: this.editor.selection, newSelection: this.editor.getSelection() })) } catch (e) { if (this.value = void 0, 1 != a) throw e } }, d.prototype._updateDomValue = function () { var b, c, d, e, f, g, a = this.dom.value; a && (b = this.value, c = "auto" == this.type ? util.type(b) : this.type, d = "string" == c && util.isUrl(b), e = "", e = d && !this.editor.mode.edit ? "" : "string" == c ? "green" : "number" == c ? "red" : "boolean" == c ? "darkorange" : this._hasChilds() ? "" : null === b ? "#004ED0" : "black", a.style.color = e, f = "" == String(this.value) && "array" != this.type && "object" != this.type, f ? util.addClassName(a, "empty") : util.removeClassName(a, "empty"), d ? util.addClassName(a, "url") : util.removeClassName(a, "url"), "array" == c || "object" == c ? (g = this.childs ? this.childs.length : 0, a.title = this.type + " containing " + g + " items") : "string" == c && util.isUrl(b) ? this.editor.mode.edit && (a.title = "Ctrl+Enter 或 Ctrl+点击 打开链接") : a.title = "", this.searchValueActive ? util.addClassName(a, "highlight-active") : util.removeClassName(a, "highlight-active"), this.searchValue ? util.addClassName(a, "highlight") : util.removeClassName(a, "highlight"), util.stripFormatting(a)) }, d.prototype._updateDomField = function () { var b, a = this.dom.field; a && (b = "" == String(this.field) && "array" != this.parent.type, b ? util.addClassName(a, "empty") : util.removeClassName(a, "empty"), this.searchFieldActive ? util.addClassName(a, "highlight-active") : util.removeClassName(a, "highlight-active"), this.searchField ? util.addClassName(a, "highlight") : util.removeClassName(a, "highlight"), util.stripFormatting(a)) }, d.prototype._getDomField = function (a) { var b, c; if (this.dom.field && this.fieldEditable && (this.fieldInnerText = util.getInnerText(this.dom.field)), void 0 != this.fieldInnerText) try { b = this._unescapeHTML(this.fieldInnerText), b !== this.field && (c = this.field, this.field = b, this.editor._onAction("editField", { node: this, oldValue: c, newValue: b, oldSelection: this.editor.selection, newSelection: this.editor.getSelection() })) } catch (d) { if (this.field = void 0, 1 != a) throw d } }, d.prototype.clearDom = function () { this.dom = {} }, d.prototype.getDom = function () { var b, c, d, e, f, a = this.dom; return a.tr ? a.tr : (a.tr = document.createElement("tr"), a.tr.node = this, this.editor.mode.edit && (b = document.createElement("td"), this.parent && (c = document.createElement("button"), a.drag = c, c.className = "dragarea", c.title = "拖动对象顺序 (Alt+Shift+↑/↓)", b.appendChild(c)), a.tr.appendChild(b), d = document.createElement("td"), e = document.createElement("button"), a.menu = e, e.className = "contextmenu", e.title = "点击打开操作菜单 (Ctrl+M)", d.appendChild(a.menu), a.tr.appendChild(d)), f = document.createElement("td"), a.tr.appendChild(f), a.tree = this._createDomTree(), f.appendChild(a.tree), this.updateDom({ updateIndexes: !0 }), a.tr) }, d.prototype._onDragStart = function (a) { var b = this; this.mousemove || (this.mousemove = util.addEventListener(document, "mousemove", function (a) { b._onDrag(a) })), this.mouseup || (this.mouseup = util.addEventListener(document, "mouseup", function (a) { b._onDragEnd(a) })), this.editor.highlighter.lock(), this.drag = { oldCursor: document.body.style.cursor, startParent: this.parent, startIndex: this.parent.childs.indexOf(this), mouseX: a.pageX, level: this.getLevel() }, document.body.style.cursor = "move", a.preventDefault() }, d.prototype._onDrag = function (a) { var b, c, f, g, h, i, j, k, l, m, n, o, p, q, u, v, w, x, y, r = a.pageY, s = a.pageX, t = !1; if (b = this.dom.tr, l = util.getAbsoluteTop(b), o = b.offsetHeight, l > r) { c = b; do c = c.previousSibling, j = d.getNodeFromTarget(c), m = c ? util.getAbsoluteTop(c) : 0; while (c && m > r); j && !j.parent && (j = void 0), j || (i = b.parentNode.firstChild, c = i ? i.nextSibling : void 0, j = d.getNodeFromTarget(c), j == this && (j = void 0)), j && (c = j.dom.tr, m = c ? util.getAbsoluteTop(c) : 0, r > m + o && (j = void 0)), j && (j.parent.moveBefore(this, j), t = !0) } else if (h = this.expanded && this.append ? this.append.getDom() : this.dom.tr, g = h ? h.nextSibling : void 0) { n = util.getAbsoluteTop(g), f = g; do k = d.getNodeFromTarget(f), f && (p = f.nextSibling ? util.getAbsoluteTop(f.nextSibling) : 0, q = f ? p - n : 0, 1 == k.parent.childs.length && k.parent.childs[0] == this && (l += 23)), f = f.nextSibling; while (f && r > l + q); if (k && k.parent) { for (u = s - this.drag.mouseX, v = Math.round(u / 24 / 2), w = this.drag.level + v, x = k.getLevel(), c = k.dom.tr.previousSibling; w > x && c;) { if (j = d.getNodeFromTarget(c), j == this || j._isChildOf(this)); else { if (!(j instanceof e)) break; if (y = j.parent.childs, !(y.length > 1 || 1 == y.length && y[0] != this)) break; k = d.getNodeFromTarget(c), x = k.getLevel() } c = c.previousSibling } h.nextSibling != k.dom.tr && (k.parent.moveBefore(this, k), t = !0) } } t && (this.drag.mouseX = s, this.drag.level = this.getLevel()), this.editor.startAutoScroll(r), a.preventDefault() }, d.prototype._onDragEnd = function (a) {
        var b = { node: this, startParent: this.drag.startParent, startIndex: this.drag.startIndex, endParent: this.parent, endIndex: this.parent.childs.indexOf(this) }; (b.startParent != b.endParent || b.startIndex != b.endIndex) && this.editor._onAction("moveNode", b), document.body.style.cursor = this.drag.oldCursor, this.editor.highlighter.unlock(), delete this.drag, this.mousemove && (util.removeEventListener(document, "mousemove", this.mousemove), delete this.mousemove), this.mouseup && (util.removeEventListener(document, "mouseup", this.mouseup), delete this.mouseup), this.editor.stopAutoScroll(), a.preventDefault()
    }, d.prototype._isChildOf = function (a) { for (var b = this.parent; b;) { if (b == a) return !0; b = b.parent } return !1 }, d.prototype._createDomField = function () { return document.createElement("div") }, d.prototype.setHighlight = function (a) { this.dom.tr && (this.dom.tr.className = a ? "highlight" : "", this.append && this.append.setHighlight(a), this.childs && this.childs.forEach(function (b) { b.setHighlight(a) })) }, d.prototype.updateValue = function (a) { this.value = a, this.updateDom() }, d.prototype.updateField = function (a) { this.field = a, this.updateDom() }, d.prototype.updateDom = function (a) { var c, d, e, f, b = this.dom.tree; b && (b.style.marginLeft = 24 * this.getLevel() + "px"), c = this.dom.field, c && (1 == this.fieldEditable ? (c.contentEditable = this.editor.mode.edit, c.spellcheck = !1, c.className = "field") : c.className = "readonly", d = void 0 != this.index ? this.index : void 0 != this.field ? this.field : this._hasChilds() ? this.type : "", c.innerHTML = this._escapeHTML(d)), e = this.dom.value, e && (f = this.childs ? this.childs.length : 0, e.innerHTML = "array" == this.type ? "[" + f + "]" : "object" == this.type ? "{" + f + "}" : this._escapeHTML(this.value)), this._updateDomField(), this._updateDomValue(), a && 1 == a.updateIndexes && this._updateDomIndexes(), a && 1 == a.recurse && this.childs && this.childs.forEach(function (b) { b.updateDom(a) }), this.append && this.append.updateDom() }, d.prototype._updateDomIndexes = function () { var a = this.dom.value, b = this.childs; a && b && ("array" == this.type ? b.forEach(function (a, b) { a.index = b; var c = a.dom.field; c && (c.innerHTML = b) }) : "object" == this.type && b.forEach(function (a) { void 0 != a.index && (delete a.index, void 0 == a.field && (a.field = "")) })) }, d.prototype._createDomValue = function () { var a; return "array" == this.type ? (a = document.createElement("div"), a.className = "readonly", a.innerHTML = "[...]") : "object" == this.type ? (a = document.createElement("div"), a.className = "readonly", a.innerHTML = "{...}") : !this.editor.mode.edit && util.isUrl(this.value) ? (a = document.createElement("a"), a.className = "value", a.href = this.value, a.target = "_blank", a.innerHTML = this._escapeHTML(this.value)) : (a = document.createElement("div"), a.contentEditable = !this.editor.mode.view, a.spellcheck = !1, a.className = "value", a.innerHTML = this._escapeHTML(this.value)), a }, d.prototype._createDomExpandButton = function () { var a = document.createElement("button"); return this._hasChilds() ? (a.className = this.expanded ? "expanded" : "collapsed", a.title = "点击展开/折叠 (Ctrl+E) \n按住Ctrl点击展开/折叠所有子节点") : (a.className = "invisible", a.title = ""), a }, d.prototype._createDomTree = function () { var d, e, f, g, h, a = this.dom, b = document.createElement("table"), c = document.createElement("tbody"); return b.style.borderCollapse = "collapse", b.className = "values", b.appendChild(c), d = document.createElement("tr"), c.appendChild(d), e = document.createElement("td"), e.className = "tree", d.appendChild(e), a.expand = this._createDomExpandButton(), e.appendChild(a.expand), a.tdExpand = e, f = document.createElement("td"), f.className = "tree", d.appendChild(f), a.field = this._createDomField(), f.appendChild(a.field), a.tdField = f, g = document.createElement("td"), g.className = "tree", d.appendChild(g), "object" != this.type && "array" != this.type && (g.appendChild(document.createTextNode(":")), g.className = "separator"), a.tdSeparator = g, h = document.createElement("td"), h.className = "tree", d.appendChild(h), a.value = this._createDomValue(), h.appendChild(a.value), a.tdValue = h, b }, d.prototype.onEvent = function (a) { var b, h, i, j, k, l, m, c = a.type, d = a.target || a.srcElement, e = this.dom, f = this, g = this._hasChilds(); if ((d == e.drag || d == e.menu) && ("mouseover" == c ? this.editor.highlighter.highlight(this) : "mouseout" == c && this.editor.highlighter.unhighlight()), "mousedown" == c && d == e.drag && this._onDragStart(a), "click" == c && d == e.menu && (h = f.editor.highlighter, h.highlight(f), h.lock(), util.addClassName(e.menu, "selected"), this.showContextMenu(e.menu, function () { util.removeClassName(e.menu, "selected"), h.unlock(), h.unhighlight() })), "click" == c && d == e.expand && g && (i = a.ctrlKey, this._onExpand(i)), j = e.value, d == j) switch (c) { case "focus": b = this; break; case "blur": case "change": this._getDomValue(!0), this._updateDomValue(), this.value && (j.innerHTML = this._escapeHTML(this.value)); break; case "input": this._getDomValue(!0), this._updateDomValue(); break; case "keydown": case "mousedown": this.editor.selection = this.editor.getSelection(); break; case "click": a.ctrlKey && this.editor.mode.edit && util.isUrl(this.value) && window.open(this.value, "_blank"); break; case "keyup": this._getDomValue(!0), this._updateDomValue(); break; case "cut": case "paste": setTimeout(function () { f._getDomValue(!0), f._updateDomValue() }, 1) } if (k = e.field, d == k) switch (c) { case "focus": b = this; break; case "blur": case "change": this._getDomField(!0), this._updateDomField(), this.field && (k.innerHTML = this._escapeHTML(this.field)); break; case "input": this._getDomField(!0), this._updateDomField(); break; case "keydown": case "mousedown": this.editor.selection = this.editor.getSelection(); break; case "keyup": this._getDomField(!0), this._updateDomField(); break; case "cut": case "paste": setTimeout(function () { f._getDomField(!0), f._updateDomField() }, 1) } if (l = e.tree, d == l.parentNode) switch (c) { case "click": m = void 0 != a.offsetX ? a.offsetX < 24 * (this.getLevel() + 1) : a.pageX < util.getAbsoluteLeft(e.tdSeparator), m || g ? k && (util.setEndOfContentEditable(k), k.focus()) : j && (util.setEndOfContentEditable(j), j.focus()) } if (d == e.tdExpand && !g || d == e.tdField || d == e.tdSeparator) switch (c) { case "click": k && (util.setEndOfContentEditable(k), k.focus()) } "keydown" == c && this.onKeyDown(a) }, d.prototype.onKeyDown = function (a) { var b, c, f, g, n, o, p, q, r, s, t, u, v, w, h = a.which || a.keyCode, i = a.target || a.srcElement, j = a.ctrlKey, k = a.shiftKey, l = a.altKey, m = !1; 13 == h ? i == this.dom.value ? (!this.editor.mode.edit || a.ctrlKey) && util.isUrl(this.value) && (window.open(this.value, "_blank"), m = !0) : i == this.dom.expand && (n = this._hasChilds(), n && (o = a.ctrlKey, this._onExpand(o), i.focus(), m = !0)) : 68 == h ? j && (this._onDuplicate(), m = !0) : 69 == h ? j && (this._onExpand(k), i.focus(), m = !0) : 77 == h ? j && (this.showContextMenu(i), m = !0) : 46 == h ? j && (this._onRemove(), m = !0) : 45 == h ? j && !k ? (this._onInsertBefore(), m = !0) : j && k && (this._onInsertAfter(), m = !0) : 35 == h ? l && (p = this._lastNode(), p && p.focus(d.focusElement || this._getElementName(i)), m = !0) : 36 == h ? l && (q = this._firstNode(), q && q.focus(d.focusElement || this._getElementName(i)), m = !0) : 37 == h ? l && !k ? (r = this._previousElement(i), r && this.focus(this._getElementName(r)), m = !0) : l && k && (this.expanded ? (s = this.getAppend(), f = s ? s.nextSibling : void 0) : (t = this.getDom(), f = t.nextSibling), f && (c = d.getNodeFromTarget(f), g = f.nextSibling, w = d.getNodeFromTarget(g), c && c instanceof e && 1 != this.parent.childs.length && w && w.parent && (w.parent.moveBefore(this, w), this.focus(d.focusElement || this._getElementName(i))))) : 38 == h ? l && !k ? (b = this._previousNode(), b && b.focus(d.focusElement || this._getElementName(i)), m = !0) : l && k && (b = this._previousNode(), b && b.parent && (b.parent.moveBefore(this, b), this.focus(d.focusElement || this._getElementName(i))), m = !0) : 39 == h ? l && !k ? (u = this._nextElement(i), u && this.focus(this._getElementName(u)), m = !0) : l && k && (t = this.getDom(), v = t.previousSibling, v && (b = d.getNodeFromTarget(v), b && b.parent && b instanceof e && !b.isVisible() && (b.parent.moveBefore(this, b), this.focus(d.focusElement || this._getElementName(i))))) : 40 == h && (l && !k ? (c = this._nextNode(), c && c.focus(d.focusElement || this._getElementName(i)), m = !0) : l && k && (c = this.expanded ? this.append ? this.append._nextNode() : void 0 : this._nextNode(), f = c ? c.getDom() : void 0, g = 1 == this.parent.childs.length ? f : f ? f.nextSibling : void 0, w = d.getNodeFromTarget(g), w && w.parent && (w.parent.moveBefore(this, w), this.focus(d.focusElement || this._getElementName(i))), m = !0)), m && (a.preventDefault(), a.stopPropagation()) }, d.prototype._onExpand = function (a) { if (a) { var b = this.dom.tr.parentNode, c = b.parentNode, d = c.scrollTop; c.removeChild(b) } this.expanded ? this.collapse(a) : this.expand(a), a && (c.appendChild(b), c.scrollTop = d) }, d.prototype._onRemove = function () { var a, b, c, d; this.editor.highlighter.unhighlight(), a = this.parent.childs, b = a.indexOf(this), c = this.editor.getSelection(), a[b + 1] ? a[b + 1].focus() : a[b - 1] ? a[b - 1].focus() : this.parent.focus(), d = this.editor.getSelection(), this.parent._remove(this), this.editor._onAction("removeNode", { node: this, parent: this.parent, index: b, oldSelection: c, newSelection: d }) }, d.prototype._onDuplicate = function () { var c, a = this.editor.getSelection(), b = this.parent._duplicate(this); b.focus(), c = this.editor.getSelection(), this.editor._onAction("duplicateNode", { node: this, clone: b, parent: this.parent, oldSelection: a, newSelection: c }) }, d.prototype._onInsertBefore = function (a, b, c) { var g, e = this.editor.getSelection(), f = new d(this.editor, { field: void 0 != a ? a : "", value: void 0 != b ? b : "", type: c }); f.expand(!0), this.parent.insertBefore(f, this), this.editor.highlighter.unhighlight(), f.focus("field"), g = this.editor.getSelection(), this.editor._onAction("insertBeforeNode", { node: f, beforeNode: this, parent: this.parent, oldSelection: e, newSelection: g }) }, d.prototype._onInsertAfter = function (a, b, c) { var g, e = this.editor.getSelection(), f = new d(this.editor, { field: void 0 != a ? a : "", value: void 0 != b ? b : "", type: c }); f.expand(!0), this.parent.insertAfter(f, this), this.editor.highlighter.unhighlight(), f.focus("field"), g = this.editor.getSelection(), this.editor._onAction("insertAfterNode", { node: f, afterNode: this, parent: this.parent, oldSelection: e, newSelection: g }) }, d.prototype._onAppend = function (a, b, c) { var g, e = this.editor.getSelection(), f = new d(this.editor, { field: void 0 != a ? a : "", value: void 0 != b ? b : "", type: c }); f.expand(!0), this.parent.appendChild(f), this.editor.highlighter.unhighlight(), f.focus("field"), g = this.editor.getSelection(), this.editor._onAction("appendNode", { node: f, parent: this.parent, oldSelection: e, newSelection: g }) }, d.prototype._onChangeType = function (a) { var c, d, b = this.type; a != b && (c = this.editor.getSelection(), this.changeType(a), d = this.editor.getSelection(), this.editor._onAction("changeType", { node: this, oldType: b, newType: a, oldSelection: c, newSelection: d })) }, d.prototype._onSort = function (a) { var b, c, d, e; this._hasChilds() && (b = "desc" == a ? -1 : 1, c = "array" == this.type ? "value" : "field", this.hideChilds(), d = this.childs, e = this.sort, this.childs = this.childs.concat(), this.childs.sort(function (a, d) { return a[c] > d[c] ? b : a[c] < d[c] ? -b : 0 }), this.sort = 1 == b ? "asc" : "desc", this.editor._onAction("sort", { node: this, oldChilds: d, oldSort: e, newChilds: this.childs, newSort: this.sort }), this.showChilds()) }, d.prototype.getAppend = function () { return this.append || (this.append = new e(this.editor), this.append.setParent(this)), this.append.getDom() }, d.getNodeFromTarget = function (a) { for (; a;) { if (a.node) return a.node; a = a.parentNode } return void 0 }, d.prototype._previousNode = function () { var c, a = null, b = this.getDom(); if (b && b.parentNode) { c = b; do c = c.previousSibling, a = d.getNodeFromTarget(c); while (c && a instanceof e && !a.isVisible()) } return a }, d.prototype._nextNode = function () { var c, a = null, b = this.getDom(); if (b && b.parentNode) { c = b; do c = c.nextSibling, a = d.getNodeFromTarget(c); while (c && a instanceof e && !a.isVisible()) } return a }, d.prototype._firstNode = function () { var c, a = null, b = this.getDom(); return b && b.parentNode && (c = b.parentNode.firstChild, a = d.getNodeFromTarget(c)), a }, d.prototype._lastNode = function () { var c, a = null, b = this.getDom(); if (b && b.parentNode) for (c = b.parentNode.lastChild, a = d.getNodeFromTarget(c) ; c && a instanceof e && !a.isVisible() ;) c = c.previousSibling, a = d.getNodeFromTarget(c); return a }, d.prototype._previousElement = function (a) { var b = this.dom; switch (a) { case b.value: if (this.fieldEditable) return b.field; case b.field: if (this._hasChilds()) return b.expand; case b.expand: return b.menu; case b.menu: if (b.drag) return b.drag; default: return null } }, d.prototype._nextElement = function (a) { var b = this.dom; switch (a) { case b.drag: return b.menu; case b.menu: if (this._hasChilds()) return b.expand; case b.expand: if (this.fieldEditable) return b.field; case b.field: if (!this._hasChilds()) return b.value; default: return null } }, d.prototype._getElementName = function (a) { var c, b = this.dom; for (c in b) if (b.hasOwnProperty(c) && b[c] == a) return c; return null }, d.prototype._hasChilds = function () { return "array" == this.type || "object" == this.type }, d.TYPE_TITLES = { auto: "自动识别", object: "object对象", array: "array数组", string: "string字符串" }, d.prototype.showContextMenu = function (a, b) { var h, i, j, c = this, e = d.TYPE_TITLES, g = []; g.push({ text: "类型", title: "改变类型", className: "type-" + this.type, submenu: [{ text: "Auto", className: "type-auto" + ("auto" == this.type ? " selected" : ""), title: e.auto, click: function () { c._onChangeType("auto") } }, { text: "Array", className: "type-array" + ("array" == this.type ? " selected" : ""), title: e.array, click: function () { c._onChangeType("array") } }, { text: "Object", className: "type-object" + ("object" == this.type ? " selected" : ""), title: e.object, click: function () { c._onChangeType("object") } }, { text: "String", className: "type-string" + ("string" == this.type ? " selected" : ""), title: e.string, click: function () { c._onChangeType("string") } }] }), this._hasChilds() && (h = "asc" == this.sort ? "desc" : "asc", g.push({ text: "排序", title: "Sort the childs of this " + this.type, className: "sort-" + h, click: function () { c._onSort(h) }, submenu: [{ text: "Asc升序", className: "sort-asc", title: "Sort the childs of this " + this.type + " in ascending order", click: function () { c._onSort("asc") } }, { text: "Desc降序", className: "sort-desc", title: "Sort the childs of this " + this.type + " in descending order", click: function () { c._onSort("desc") } }] })), this.parent && this.parent._hasChilds() && (g.push({ type: "separator" }), i = c.parent.childs, c == i[i.length - 1] && g.push({ text: "添加", title: "快捷添加 (Ctrl+Shift+Ins)", submenuTitle: "Select the type of the field to be appended", className: "append", click: function () { c._onAppend("", "", "auto") }, submenu: [{ text: "Auto", className: "type-auto", title: e.auto, click: function () { c._onAppend("", "", "auto") } }, { text: "Array", className: "type-array", title: e.array, click: function () { c._onAppend("", []) } }, { text: "Object", className: "type-object", title: e.object, click: function () { c._onAppend("", {}) } }, { text: "String", className: "type-string", title: e.string, click: function () { c._onAppend("", "", "string") } }] }), g.push({ text: "插入", title: "快捷插入 (Ctrl+Ins)", submenuTitle: "选择要插入的字段的类型", className: "insert", click: function () { c._onInsertBefore("", "", "auto") }, submenu: [{ text: "Auto", className: "type-auto", title: e.auto, click: function () { c._onInsertBefore("", "", "auto") } }, { text: "Array", className: "type-array", title: e.array, click: function () { c._onInsertBefore("", []) } }, { text: "Object", className: "type-object", title: e.object, click: function () { c._onInsertBefore("", {}) } }, { text: "String", className: "type-string", title: e.string, click: function () { c._onInsertBefore("", "", "string") } }] }), g.push({ text: "复制", title: "快捷复制 (Ctrl+D)", className: "duplicate", click: function () { c._onDuplicate() } }), g.push({ text: "删除", title: "快捷删除 (Ctrl+Del)", className: "remove", click: function () { c._onRemove() } })), j = new f(g, { close: b }), j.show(a) }, d.prototype._getType = function (a) { return a instanceof Array ? "array" : a instanceof Object ? "object" : "string" == typeof a && "string" != typeof this._stringCast(a) ? "string" : "auto" }, d.prototype._stringCast = function (a) { var b = a.toLowerCase(), c = Number(a), d = parseFloat(a); return "" == a ? "" : "null" == b ? null : "true" == b ? !0 : "false" == b ? !1 : isNaN(c) || isNaN(d) ? a : c }, d.prototype._escapeHTML = function (a) { var b = String(a).replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/  /g, " &nbsp;").replace(/^ /, "&nbsp;").replace(/ $/, "&nbsp;"), c = JSON.stringify(b); return c.substring(1, c.length - 1) }, d.prototype._unescapeHTML = function (a) { var b = '"' + this._escapeJSON(a) + '"', c = util.parse(b); return c.replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&nbsp;|\u00A0/g, " ") }, d.prototype._escapeJSON = function (a) { var b, c, d, e; for (b = "", c = 0, d = a.length; d > c;) e = a.charAt(c), "\n" == e ? b += "\\n" : "\\" == e ? (b += e, c++, e = a.charAt(c), -1 == '"\\/bfnrtu'.indexOf(e) && (b += "\\"), b += e) : b += '"' == e ? '\\"' : e, c++; return b }, e.prototype = new d, e.prototype.getDom = function () { var b, c, d, e, f, a = this.dom; return a.tr ? a.tr : (b = document.createElement("tr"), b.node = this, a.tr = b, this.editor.mode.edit && (a.tdDrag = document.createElement("td"), c = document.createElement("td"), a.tdMenu = c, d = document.createElement("button"), d.className = "contextmenu", d.title = "Click to open the actions menu (Ctrl+M)", a.menu = d, c.appendChild(a.menu)), e = document.createElement("td"), f = document.createElement("div"), f.innerHTML = "(empty)", f.className = "readonly", e.appendChild(f), a.td = e, a.text = f, this.updateDom(), b) }, e.prototype.updateDom = function () { var c, d, a = this.dom, b = a.td; b && (b.style.paddingLeft = 24 * this.getLevel() + 26 + "px"), c = a.text, c && (c.innerHTML = "(empty " + this.parent.type + ")"), d = a.tr, this.isVisible() ? a.tr.firstChild || (a.tdDrag && d.appendChild(a.tdDrag), a.tdMenu && d.appendChild(a.tdMenu), d.appendChild(b)) : a.tr.firstChild && (a.tdDrag && d.removeChild(a.tdDrag), a.tdMenu && d.removeChild(a.tdMenu), d.removeChild(b)) }, e.prototype.isVisible = function () { return 0 == this.parent.childs.length }, e.prototype.showContextMenu = function (a, b) { var c = this, e = d.TYPE_TITLES, g = [{ text: "添加对象", title: "快捷添加 (Ctrl+Shift+Ins)", submenuTitle: "Select the type of the field to be appended", className: "insert", click: function () { c._onAppend("", "", "auto") }, submenu: [{ text: "Auto", className: "type-auto", title: e.auto, click: function () { c._onAppend("", "", "auto") } }, { text: "Array", className: "type-array", title: e.array, click: function () { c._onAppend("", []) } }, { text: "Object", className: "type-object", title: e.object, click: function () { c._onAppend("", {}) } }, { text: "String", className: "type-string", title: e.string, click: function () { c._onAppend("", "", "string") } }] }], h = new f(g, { close: b }); h.show(a) }, e.prototype.onEvent = function (a) { var f, b = a.type, c = a.target || a.srcElement, d = this.dom, e = d.menu; c == e && ("mouseover" == b ? this.editor.highlighter.highlight(this.parent) : "mouseout" == b && this.editor.highlighter.unhighlight()), "click" == b && c == d.menu && (f = this.editor.highlighter, f.highlight(this.parent), f.lock(), util.addClassName(d.menu, "selected"), this.showContextMenu(d.menu, function () { util.removeClassName(d.menu, "selected"), f.unlock(), f.unhighlight() })), "keydown" == b && this.onKeyDown(a) }, f.prototype._getVisibleButtons = function () { var a = [], b = this; return this.dom.items.forEach(function (c) { a.push(c.button), c.buttonExpand && a.push(c.buttonExpand), c.subItems && c == b.expandedItem && c.subItems.forEach(function (b) { a.push(b.button), b.buttonExpand && a.push(b.buttonExpand) }) }), a }, f.visibleMenu = void 0, f.prototype.show = function (a) { var b, c, d, e, g, h, i, j, k; this.hide(), b = window.innerHeight, c = window.pageYOffset || document.scrollTop || 0, d = b + c, e = a.offsetHeight, g = this.maxHeight, h = util.getAbsoluteLeft(a), i = util.getAbsoluteTop(a), d > i + e + g ? (this.dom.menu.style.left = h + "px", this.dom.menu.style.top = i + e + "px", this.dom.menu.style.bottom = "") : (this.dom.menu.style.left = h + "px", this.dom.menu.style.top = "", this.dom.menu.style.bottom = b - i + "px"), document.body.appendChild(this.dom.menu), j = this, k = this.dom.list, this.eventListeners.mousedown = util.addEventListener(document, "mousedown", function (a) { var b = a.target; b == k || j._isChildOf(b, k) || (j.hide(), a.stopPropagation(), a.preventDefault()) }), this.eventListeners.mousewheel = util.addEventListener(document, "mousewheel", function (a) { a.stopPropagation(), a.preventDefault() }), this.eventListeners.keydown = util.addEventListener(document, "keydown", function (a) { j._onKeyDown(a) }), this.selection = util.getSelection(), this.anchor = a, setTimeout(function () { j.dom.focusButton.focus() }, 0), f.visibleMenu && f.visibleMenu.hide(), f.visibleMenu = this }, f.prototype.hide = function () { var a, b; this.dom.menu.parentNode && (this.dom.menu.parentNode.removeChild(this.dom.menu), this.onClose && this.onClose()); for (a in this.eventListeners) this.eventListeners.hasOwnProperty(a) && (b = this.eventListeners[a], b && util.removeEventListener(document, a, b), delete this.eventListeners[a]); f.visibleMenu == this && (f.visibleMenu = void 0) }, f.prototype._onExpandItem = function (a) { var e, b = this, c = a == this.expandedItem, d = this.expandedItem; d && (d.ul.style.height = "0", d.ul.style.padding = "", setTimeout(function () { b.expandedItem != d && (d.ul.style.display = "", util.removeClassName(d.ul.parentNode, "selected")) }, 300), this.expandedItem = void 0), c || (e = a.ul, e.style.display = "block", e.clientHeight, setTimeout(function () { b.expandedItem == a && (e.style.height = 24 * e.childNodes.length + "px", e.style.padding = "5px 10px") }, 0), util.addClassName(e.parentNode, "selected"), this.expandedItem = a) }, f.prototype._onKeyDown = function (a) { var b, c, d, e, f = a.target, g = a.which, h = !1; 27 == g ? (this.selection && util.setSelection(this.selection), this.anchor && this.anchor.focus(), this.hide(), h = !0) : 9 == g ? a.shiftKey ? (b = this._getVisibleButtons(), c = b.indexOf(f), 0 == c && (b[b.length - 1].focus(), h = !0)) : (b = this._getVisibleButtons(), c = b.indexOf(f), c == b.length - 1 && (b[0].focus(), h = !0)) : 37 == g ? ("expand" == f.className && (b = this._getVisibleButtons(), c = b.indexOf(f), d = b[c - 1], d && d.focus()), h = !0) : 38 == g ? (b = this._getVisibleButtons(), c = b.indexOf(f), d = b[c - 1], d && "expand" == d.className && (d = b[c - 2]), d || (d = b[b.length - 1]), d && d.focus(), h = !0) : 39 == g ? (b = this._getVisibleButtons(), c = b.indexOf(f), e = b[c + 1], e && "expand" == e.className && e.focus(), h = !0) : 40 == g && (b = this._getVisibleButtons(), c = b.indexOf(f), e = b[c + 1], e && "expand" == e.className && (e = b[c + 2]), e || (e = b[0]), e && (e.focus(), h = !0), h = !0), h && (a.stopPropagation(), a.preventDefault()) }, f.prototype._isChildOf = function (a, b) { for (var c = a.parentNode; c;) { if (c == b) return !0; c = c.parentNode } return !1 }, g.prototype.onChange = function () { }, g.prototype.add = function (a, b) { this.index++, this.history[this.index] = { action: a, params: b, timestamp: new Date }, this.index < this.history.length - 1 && this.history.splice(this.index + 1, this.history.length - this.index - 1), this.onChange() }, g.prototype.clear = function () { this.history = [], this.index = -1, this.onChange() }, g.prototype.canUndo = function () { return this.index >= 0 }, g.prototype.canRedo = function () { return this.index < this.history.length - 1 }, g.prototype.undo = function () { var a, b; this.canUndo() && (a = this.history[this.index], a && (b = this.actions[a.action], b && b.undo ? (b.undo(a.params), a.params.oldSelection && this.editor.setSelection(a.params.oldSelection)) : util.log('Error: unknown action "' + a.action + '"')), this.index--, this.onChange()) }, g.prototype.redo = function () { var a, b; this.canRedo() && (this.index++, a = this.history[this.index], a && (b = this.actions[a.action], b && b.redo ? (b.redo(a.params), a.params.newSelection && this.editor.setSelection(a.params.newSelection)) : util.log('Error: unknown action "' + a.action + '"')), this.onChange()) }, i.prototype.next = function (a) { if (void 0 != this.results) { var b = void 0 != this.resultIndex ? this.resultIndex + 1 : 0; b > this.results.length - 1 && (b = 0), this._setActiveResult(b, a) } }, i.prototype.previous = function (a) { if (void 0 != this.results) { var b = this.results.length - 1, c = void 0 != this.resultIndex ? this.resultIndex - 1 : b; 0 > c && (c = b), this._setActiveResult(c, a) } }, i.prototype._setActiveResult = function (a, b) { var c, d, e, f; return this.activeResult && (c = this.activeResult.node, d = this.activeResult.elem, "field" == d ? delete c.searchFieldActive : delete c.searchValueActive, c.updateDom()), this.results && this.results[a] ? (this.resultIndex = a, e = this.results[this.resultIndex].node, f = this.results[this.resultIndex].elem, "field" == f ? e.searchFieldActive = !0 : e.searchValueActive = !0, this.activeResult = this.results[this.resultIndex], e.updateDom(), e.scrollTo(function () { b && e.focus(f) }), void 0) : (this.resultIndex = void 0, this.activeResult = void 0, void 0) }, i.prototype._clearDelay = function () { void 0 != this.timeout && (clearTimeout(this.timeout), delete this.timeout) }, i.prototype._onDelayedSearch = function () { this._clearDelay(); var a = this; this.timeout = setTimeout(function (b) { a._onSearch(b) }, this.delay) }, i.prototype._onSearch = function (a, b) { var c, d, e; if (this._clearDelay(), c = this.dom.search.value, d = c.length > 0 ? c : void 0, d != this.lastText || b) if (this.lastText = d, this.results = this.editor.search(d), this._setActiveResult(void 0), void 0 != d) switch (e = this.results.length) { case 0: this.dom.results.innerHTML = "没有找到"; break; case 1: this.dom.results.innerHTML = "1 个结果"; break; default: this.dom.results.innerHTML = e + "&nbsp;个结果" } else this.dom.results.innerHTML = "" }, i.prototype._onKeyDown = function (a) { var b = a.which; 27 == b ? (this.dom.search.value = "", this._onSearch(a), a.preventDefault(), a.stopPropagation()) : 13 == b && (a.ctrlKey ? this._onSearch(a, !0) : a.shiftKey ? this.previous() : this.next(), a.preventDefault(), a.stopPropagation()) }, i.prototype._onKeyUp = function (a) { var b = a.keyCode; 27 != b && 13 != b && this._onDelayedSearch(a) }, j.prototype.highlight = function (a) { this.locked || (this.node != a && (this.node && this.node.setHighlight(!1), this.node = a, this.node.setHighlight(!0)), this._cancelUnhighlight()) }, j.prototype.unhighlight = function () { if (!this.locked) { var a = this; this.node && (this._cancelUnhighlight(), this.unhighlightTimer = setTimeout(function () { a.node.setHighlight(!1), a.node = void 0, a.unhighlightTimer = void 0 }, 0)) } }, j.prototype._cancelUnhighlight = function () { this.unhighlightTimer && (clearTimeout(this.unhighlightTimer), this.unhighlightTimer = void 0) }, j.prototype.lock = function () { this.locked = !0 }, j.prototype.unlock = function () { this.locked = !1 }, util = {}, util.parse = function (a) { try { return JSON.parse(a) } catch (b) { throw util.validate(a), b } }, util.validate = function (a) { "undefined" != typeof jsonlint ? jsonlint.parse(a) : JSON.parse(a) }, util.extend = function (a, b) { for (var c in b) b.hasOwnProperty(c) && (a[c] = b[c]); return a }, util.clear = function (a) { for (var b in a) a.hasOwnProperty(b) && delete a[b]; return a }, util.log = function () { "undefined" != typeof console && "function" == typeof console.log && console.log.apply(console, arguments) }, util.type = function (a) { return null === a ? "null" : void 0 === a ? "undefined" : a instanceof Number || "number" == typeof a ? "number" : a instanceof String || "string" == typeof a ? "string" : a instanceof Boolean || "boolean" == typeof a ? "boolean" : a instanceof RegExp || "regexp" == typeof a ? "regexp" : Array.isArray(a) ? "array" : "object" }, k = /^https?:\/\/\S+$/, util.isUrl = function (a) { return ("string" == typeof a || a instanceof String) && k.test(a) }, util.getAbsoluteLeft = function (a) { var b = a.getBoundingClientRect(); return b.left + window.pageXOffset || document.scrollLeft || 0 }, util.getAbsoluteTop = function (a) { var b = a.getBoundingClientRect(); return b.top + window.pageYOffset || document.scrollTop || 0 }, util.addClassName = function (a, b) { var c = a.className.split(" "); -1 == c.indexOf(b) && (c.push(b), a.className = c.join(" ")) }, util.removeClassName = function (a, b) { var c = a.className.split(" "), d = c.indexOf(b); -1 != d && (c.splice(d, 1), a.className = c.join(" ")) }, util.stripFormatting = function (a) { var b, c, d, e, f, g, h; for (b = a.childNodes, c = 0, d = b.length; d > c; c++) { if (e = b[c], e.style && e.removeAttribute("style"), f = e.attributes) for (g = f.length - 1; g >= 0; g--) h = f[g], 1 == h.specified && e.removeAttribute(h.name); util.stripFormatting(e) } }, util.setEndOfContentEditable = function (a) { var b, c; document.createRange && (b = document.createRange(), b.selectNodeContents(a), b.collapse(!1), c = window.getSelection(), c.removeAllRanges(), c.addRange(b)) }, util.selectContentEditable = function (a) { if (a && "DIV" == a.nodeName) { var b, c; window.getSelection && document.createRange && (c = document.createRange(), c.selectNodeContents(a), b = window.getSelection(), b.removeAllRanges(), b.addRange(c)) } }, util.getSelection = function () { if (window.getSelection) { var a = window.getSelection(); if (a.getRangeAt && a.rangeCount) return a.getRangeAt(0) } return null }, util.setSelection = function (a) { if (a && window.getSelection) { var b = window.getSelection(); b.removeAllRanges(), b.addRange(a) } }, util.getSelectionOffset = function () { var a = util.getSelection(); return a && "startOffset" in a && "endOffset" in a && a.startContainer && a.startContainer == a.endContainer ? { startOffset: a.startOffset, endOffset: a.endOffset, container: a.startContainer.parentNode } : null }, util.setSelectionOffset = function (a) { var b, c; document.createRange && window.getSelection && (b = window.getSelection(), b && (c = document.createRange(), c.setStart(a.container.firstChild, a.startOffset), c.setEnd(a.container.firstChild, a.endOffset), util.setSelection(c))) }, util.getInnerText = function (a, b) { var d, e, f, g, h, i, j, c = void 0 == b; if (c && (b = { text: "", flush: function () { var a = this.text; return this.text = "", a }, set: function (a) { this.text = a } }), a.nodeValue) return b.flush() + a.nodeValue; if (a.hasChildNodes()) { for (d = a.childNodes, e = "", f = 0, g = d.length; g > f; f++) h = d[f], "DIV" == h.nodeName || "P" == h.nodeName ? (i = d[f - 1], j = i ? i.nodeName : void 0, j && "DIV" != j && "P" != j && "BR" != j && (e += "\n", b.flush()), e += util.getInnerText(h, b), b.set("\n")) : "BR" == h.nodeName ? (e += b.flush(), b.set("\n")) : e += util.getInnerText(h, b); return e } return "P" == a.nodeName && -1 != util.getInternetExplorerVersion() ? b.flush() : "" }, util.getInternetExplorerVersion = function () { var a, b, c; return -1 == l && (a = -1, "Microsoft Internet Explorer" == navigator.appName && (b = navigator.userAgent, c = new RegExp("MSIE ([0-9]{1,}[.0-9]{0,})"), null != c.exec(b) && (a = parseFloat(RegExp.$1))), l = a), l }, util.isFirefox = function () { return -1 != navigator.userAgent.indexOf("Firefox") }, l = -1, util.addEventListener = function (a, b, c, d) { if (a.addEventListener) return void 0 === d && (d = !1), "mousewheel" === b && util.isFirefox() && (b = "DOMMouseScroll"), a.addEventListener(b, c, d), c; if (a.attachEvent) { var e = function () { return c.call(a, window.event) }; return a.attachEvent("on" + b, e), e } }, util.removeEventListener = function (a, b, c, d) { a.removeEventListener ? (void 0 === d && (d = !1), "mousewheel" === b && util.isFirefox() && (b = "DOMMouseScroll"), a.removeEventListener(b, c, d)) : a.detachEvent && a.detachEvent("on" + b, c) }, m = { JSONEditor: a, JSONFormatter: function () { throw new Error('JSONFormatter is deprecated. Use JSONEditor with mode "text" or "code" instead') }, util: util }, n = function () { var a, b, c, d, e, f; for (a = document.getElementsByTagName("script"), b = 0; b < a.length; b++) if (c = a[b].src, /(^|\/)jsoneditor([-\.]min)?.js$/.test(c)) { d = c.split("?")[0], e = d.substring(0, d.length - 2) + "css", f = document.createElement("link"), f.type = "text/css", f.rel = "stylesheet", f.href = e, document.getElementsByTagName("head")[0].appendChild(f); break } }, "undefined" != typeof module && "undefined" != typeof exports && (n(), module.exports = exports = m), "undefined" != typeof require && "undefined" != typeof define ? (n(), define(function () { return m })) : window.jsoneditor = m
}();